// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MaProgramez.Website.Controllers
{
    public partial class ScheduleController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ScheduleController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ScheduleController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AcceptAllPendingSchedules()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AcceptAllPendingSchedules);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AcceptPendingSchedule()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AcceptPendingSchedule);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Add()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Add);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddSchedule()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddSchedule);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddToFavourites()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddToFavourites);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Backend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Backend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult BackendClient()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BackendClient);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CancelSchedule()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CancelSchedule);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CategoriesList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CategoriesList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteFromFavourites()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFromFavourites);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteSchedule()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteSchedule);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditSchedule()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditSchedule);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ProvidersList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProvidersList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ViewPendingSchedules()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewPendingSchedules);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ViewSchedule()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewSchedule);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SchedulesList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SchedulesList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ViewSchedules()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewSchedules);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RedirectToConfirmation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectToConfirmation);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ScheduleController Actions { get { return MVC.Schedule; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Schedule";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Schedule";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string AcceptAllPendingSchedules = "AcceptAllPendingSchedules";
            public readonly string AcceptPendingSchedule = "AcceptPendingSchedule";
            public readonly string Add = "Add";
            public readonly string AddSchedule = "AddSchedule";
            public readonly string AddToFavourites = "AddToFavourites";
            public readonly string Backend = "Backend";
            public readonly string BackendClient = "BackendClient";
            public readonly string CancelSchedule = "CancelSchedule";
            public readonly string CategoriesList = "CategoriesList";
            public readonly string ClientViewSchedules = "ClientViewSchedules";
            public readonly string DeleteFromFavourites = "DeleteFromFavourites";
            public readonly string DeleteSchedule = "DeleteSchedule";
            public readonly string EditSchedule = "EditSchedule";
            public readonly string Index = "Index";
            public readonly string ProvidersList = "ProvidersList";
            public readonly string ViewPendingSchedules = "ViewPendingSchedules";
            public readonly string ViewSchedule = "ViewSchedule";
            public readonly string SchedulesList = "SchedulesList";
            public readonly string ViewSchedules = "ViewSchedules";
            public readonly string ViewAllSlotsSchedules = "ViewAllSlotsSchedules";
            public readonly string RedirectToConfirmation = "RedirectToConfirmation";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string AcceptAllPendingSchedules = "AcceptAllPendingSchedules";
            public const string AcceptPendingSchedule = "AcceptPendingSchedule";
            public const string Add = "Add";
            public const string AddSchedule = "AddSchedule";
            public const string AddToFavourites = "AddToFavourites";
            public const string Backend = "Backend";
            public const string BackendClient = "BackendClient";
            public const string CancelSchedule = "CancelSchedule";
            public const string CategoriesList = "CategoriesList";
            public const string ClientViewSchedules = "ClientViewSchedules";
            public const string DeleteFromFavourites = "DeleteFromFavourites";
            public const string DeleteSchedule = "DeleteSchedule";
            public const string EditSchedule = "EditSchedule";
            public const string Index = "Index";
            public const string ProvidersList = "ProvidersList";
            public const string ViewPendingSchedules = "ViewPendingSchedules";
            public const string ViewSchedule = "ViewSchedule";
            public const string SchedulesList = "SchedulesList";
            public const string ViewSchedules = "ViewSchedules";
            public const string ViewAllSlotsSchedules = "ViewAllSlotsSchedules";
            public const string RedirectToConfirmation = "RedirectToConfirmation";
        }


        static readonly ActionParamsClass_AcceptAllPendingSchedules s_params_AcceptAllPendingSchedules = new ActionParamsClass_AcceptAllPendingSchedules();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AcceptAllPendingSchedules AcceptAllPendingSchedulesParams { get { return s_params_AcceptAllPendingSchedules; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AcceptAllPendingSchedules
        {
            public readonly string slotId = "slotId";
        }
        static readonly ActionParamsClass_AcceptPendingSchedule s_params_AcceptPendingSchedule = new ActionParamsClass_AcceptPendingSchedule();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AcceptPendingSchedule AcceptPendingScheduleParams { get { return s_params_AcceptPendingSchedule; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AcceptPendingSchedule
        {
            public readonly string scheduleId = "scheduleId";
        }
        static readonly ActionParamsClass_Add s_params_Add = new ActionParamsClass_Add();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Add AddParams { get { return s_params_Add; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Add
        {
            public readonly string providerId = "providerId";
            public readonly string categoryId = "categoryId";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_AddSchedule s_params_AddSchedule = new ActionParamsClass_AddSchedule();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddSchedule AddScheduleParams { get { return s_params_AddSchedule; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddSchedule
        {
            public readonly string slotId = "slotId";
            public readonly string userId = "userId";
            public readonly string day = "day";
            public readonly string month = "month";
            public readonly string year = "year";
            public readonly string hour = "hour";
            public readonly string minute = "minute";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_AddToFavourites s_params_AddToFavourites = new ActionParamsClass_AddToFavourites();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddToFavourites AddToFavouritesParams { get { return s_params_AddToFavourites; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddToFavourites
        {
            public readonly string slotId = "slotId";
            public readonly string scheduleId = "scheduleId";
        }
        static readonly ActionParamsClass_Backend s_params_Backend = new ActionParamsClass_Backend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Backend BackendParams { get { return s_params_Backend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Backend
        {
            public readonly string slotId = "slotId";
        }
        static readonly ActionParamsClass_BackendClient s_params_BackendClient = new ActionParamsClass_BackendClient();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_BackendClient BackendClientParams { get { return s_params_BackendClient; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_BackendClient
        {
            public readonly string userId = "userId";
        }
        static readonly ActionParamsClass_CancelSchedule s_params_CancelSchedule = new ActionParamsClass_CancelSchedule();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CancelSchedule CancelScheduleParams { get { return s_params_CancelSchedule; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CancelSchedule
        {
            public readonly string id = "id";
            public readonly string isClient = "isClient";
        }
        static readonly ActionParamsClass_CategoriesList s_params_CategoriesList = new ActionParamsClass_CategoriesList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CategoriesList CategoriesListParams { get { return s_params_CategoriesList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CategoriesList
        {
            public readonly string parentCategoryId = "parentCategoryId";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ClientViewSchedules s_params_ClientViewSchedules = new ActionParamsClass_ClientViewSchedules();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ClientViewSchedules ClientViewSchedulesParams { get { return s_params_ClientViewSchedules; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ClientViewSchedules
        {
            public readonly string date = "date";
        }
        static readonly ActionParamsClass_DeleteFromFavourites s_params_DeleteFromFavourites = new ActionParamsClass_DeleteFromFavourites();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteFromFavourites DeleteFromFavouritesParams { get { return s_params_DeleteFromFavourites; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteFromFavourites
        {
            public readonly string slotId = "slotId";
            public readonly string scheduleId = "scheduleId";
        }
        static readonly ActionParamsClass_DeleteSchedule s_params_DeleteSchedule = new ActionParamsClass_DeleteSchedule();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteSchedule DeleteScheduleParams { get { return s_params_DeleteSchedule; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteSchedule
        {
            public readonly string id = "id";
            public readonly string slotId = "slotId";
        }
        static readonly ActionParamsClass_EditSchedule s_params_EditSchedule = new ActionParamsClass_EditSchedule();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditSchedule EditScheduleParams { get { return s_params_EditSchedule; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditSchedule
        {
            public readonly string id = "id";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ProvidersList s_params_ProvidersList = new ActionParamsClass_ProvidersList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ProvidersList ProvidersListParams { get { return s_params_ProvidersList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ProvidersList
        {
            public readonly string categoryId = "categoryId";
            public readonly string cityId = "cityId";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ViewPendingSchedules s_params_ViewPendingSchedules = new ActionParamsClass_ViewPendingSchedules();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewPendingSchedules ViewPendingSchedulesParams { get { return s_params_ViewPendingSchedules; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewPendingSchedules
        {
            public readonly string slotId = "slotId";
        }
        static readonly ActionParamsClass_ViewSchedule s_params_ViewSchedule = new ActionParamsClass_ViewSchedule();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewSchedule ViewScheduleParams { get { return s_params_ViewSchedule; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewSchedule
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SchedulesList s_params_SchedulesList = new ActionParamsClass_SchedulesList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SchedulesList SchedulesListParams { get { return s_params_SchedulesList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SchedulesList
        {
            public readonly string userId = "userId";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_ViewSchedules s_params_ViewSchedules = new ActionParamsClass_ViewSchedules();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewSchedules ViewSchedulesParams { get { return s_params_ViewSchedules; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewSchedules
        {
            public readonly string slotId = "slotId";
            public readonly string date = "date";
        }
        static readonly ActionParamsClass_ViewAllSlotsSchedules s_params_ViewAllSlotsSchedules = new ActionParamsClass_ViewAllSlotsSchedules();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewAllSlotsSchedules ViewAllSlotsSchedulesParams { get { return s_params_ViewAllSlotsSchedules; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewAllSlotsSchedules
        {
            public readonly string date = "date";
        }
        static readonly ActionParamsClass_RedirectToConfirmation s_params_RedirectToConfirmation = new ActionParamsClass_RedirectToConfirmation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToConfirmation RedirectToConfirmationParams { get { return s_params_RedirectToConfirmation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToConfirmation
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Add = "Add";
                public readonly string AddSchedule = "AddSchedule";
                public readonly string CategoriesList = "CategoriesList";
                public readonly string ClientViewSchedules = "ClientViewSchedules";
                public readonly string EditSchedule = "EditSchedule";
                public readonly string Index = "Index";
                public readonly string ProvidersList = "ProvidersList";
                public readonly string SchedulesList = "SchedulesList";
                public readonly string ViewAllSlotsSchedules = "ViewAllSlotsSchedules";
                public readonly string ViewPendingSchedules = "ViewPendingSchedules";
                public readonly string ViewSchedule = "ViewSchedule";
                public readonly string ViewSchedules = "ViewSchedules";
            }
            public readonly string Add = "~/Views/Schedule/Add.cshtml";
            public readonly string AddSchedule = "~/Views/Schedule/AddSchedule.cshtml";
            public readonly string CategoriesList = "~/Views/Schedule/CategoriesList.cshtml";
            public readonly string ClientViewSchedules = "~/Views/Schedule/ClientViewSchedules.cshtml";
            public readonly string EditSchedule = "~/Views/Schedule/EditSchedule.cshtml";
            public readonly string Index = "~/Views/Schedule/Index.cshtml";
            public readonly string ProvidersList = "~/Views/Schedule/ProvidersList.cshtml";
            public readonly string SchedulesList = "~/Views/Schedule/SchedulesList.cshtml";
            public readonly string ViewAllSlotsSchedules = "~/Views/Schedule/ViewAllSlotsSchedules.cshtml";
            public readonly string ViewPendingSchedules = "~/Views/Schedule/ViewPendingSchedules.cshtml";
            public readonly string ViewSchedule = "~/Views/Schedule/ViewSchedule.cshtml";
            public readonly string ViewSchedules = "~/Views/Schedule/ViewSchedules.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ScheduleController : MaProgramez.Website.Controllers.ScheduleController
    {
        public T4MVC_ScheduleController() : base(Dummy.Instance) { }

        [NonAction]
        partial void AcceptAllPendingSchedulesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int slotId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AcceptAllPendingSchedules(int slotId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AcceptAllPendingSchedules);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "slotId", slotId);
            AcceptAllPendingSchedulesOverride(callInfo, slotId);
            return callInfo;
        }

        [NonAction]
        partial void AcceptPendingScheduleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int scheduleId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AcceptPendingSchedule(int scheduleId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AcceptPendingSchedule);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "scheduleId", scheduleId);
            AcceptPendingScheduleOverride(callInfo, scheduleId);
            return callInfo;
        }

        [NonAction]
        partial void AddOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string providerId, int categoryId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Add(string providerId, int categoryId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Add);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "providerId", providerId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            AddOverride(callInfo, providerId, categoryId);
            return callInfo;
        }

        [NonAction]
        partial void AddOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.AddAppointmentViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Add(MaProgramez.Website.ViewModels.AddAppointmentViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Add);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void AddScheduleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int slotId, string userId, int day, int month, int year, int? hour, int? minute);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddSchedule(int slotId, string userId, int day, int month, int year, int? hour, int? minute)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddSchedule);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "slotId", slotId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "day", day);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "month", month);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "year", year);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "hour", hour);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "minute", minute);
            AddScheduleOverride(callInfo, slotId, userId, day, month, year, hour, minute);
            return callInfo;
        }

        [NonAction]
        partial void AddScheduleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.AddEventViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddSchedule(MaProgramez.Website.ViewModels.AddEventViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddSchedule);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddScheduleOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void AddToFavouritesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int slotId, int scheduleId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddToFavourites(int slotId, int scheduleId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddToFavourites);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "slotId", slotId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "scheduleId", scheduleId);
            AddToFavouritesOverride(callInfo, slotId, scheduleId);
            return callInfo;
        }

        [NonAction]
        partial void BackendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int slotId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Backend(int slotId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Backend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "slotId", slotId);
            BackendOverride(callInfo, slotId);
            return callInfo;
        }

        [NonAction]
        partial void BackendClientOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userId);

        [NonAction]
        public override System.Web.Mvc.ActionResult BackendClient(string userId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BackendClient);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            BackendClientOverride(callInfo, userId);
            return callInfo;
        }

        [NonAction]
        partial void CancelScheduleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool isClient);

        [NonAction]
        public override System.Web.Mvc.ActionResult CancelSchedule(int id, bool isClient)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CancelSchedule);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isClient", isClient);
            CancelScheduleOverride(callInfo, id, isClient);
            return callInfo;
        }

        [NonAction]
        partial void CategoriesListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? parentCategoryId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CategoriesList(int? parentCategoryId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CategoriesList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parentCategoryId", parentCategoryId);
            CategoriesListOverride(callInfo, parentCategoryId);
            return callInfo;
        }

        [NonAction]
        partial void CategoriesListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Repository.Models.CategoryParameters model);

        [NonAction]
        public override System.Web.Mvc.ActionResult CategoriesList(MaProgramez.Repository.Models.CategoryParameters model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CategoriesList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CategoriesListOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ClientViewSchedulesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.DateTime? date);

        [NonAction]
        public override System.Web.Mvc.ActionResult ClientViewSchedules(System.DateTime? date)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ClientViewSchedules);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "date", date);
            ClientViewSchedulesOverride(callInfo, date);
            return callInfo;
        }

        [NonAction]
        partial void DeleteFromFavouritesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int slotId, int scheduleId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteFromFavourites(int slotId, int scheduleId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFromFavourites);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "slotId", slotId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "scheduleId", scheduleId);
            DeleteFromFavouritesOverride(callInfo, slotId, scheduleId);
            return callInfo;
        }

        [NonAction]
        partial void DeleteScheduleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, int slotId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteSchedule(int id, int slotId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteSchedule);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "slotId", slotId);
            DeleteScheduleOverride(callInfo, id, slotId);
            return callInfo;
        }

        [NonAction]
        partial void EditScheduleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditSchedule(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditSchedule);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EditScheduleOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EditScheduleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.AddEventViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditSchedule(MaProgramez.Website.ViewModels.AddEventViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditSchedule);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            EditScheduleOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ProvidersListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int categoryId, int? cityId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ProvidersList(int categoryId, int? cityId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProvidersList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cityId", cityId);
            ProvidersListOverride(callInfo, categoryId, cityId);
            return callInfo;
        }

        [NonAction]
        partial void ProvidersListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Repository.Models.CategoryParameters model);

        [NonAction]
        public override System.Web.Mvc.ActionResult ProvidersList(MaProgramez.Repository.Models.CategoryParameters model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProvidersList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ProvidersListOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ViewPendingSchedulesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int slotId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewPendingSchedules(int slotId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewPendingSchedules);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "slotId", slotId);
            ViewPendingSchedulesOverride(callInfo, slotId);
            return callInfo;
        }

        [NonAction]
        partial void ViewScheduleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewSchedule(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewSchedule);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ViewScheduleOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SchedulesListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userId, int? page);

        [NonAction]
        public override System.Web.Mvc.ActionResult SchedulesList(string userId, int? page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SchedulesList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            SchedulesListOverride(callInfo, userId, page);
            return callInfo;
        }

        [NonAction]
        partial void ViewSchedulesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int slotId, System.DateTime? date);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewSchedules(int slotId, System.DateTime? date)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewSchedules);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "slotId", slotId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "date", date);
            ViewSchedulesOverride(callInfo, slotId, date);
            return callInfo;
        }

        [NonAction]
        partial void ViewAllSlotsSchedulesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.DateTime? date);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewAllSlotsSchedules(System.DateTime? date)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewAllSlotsSchedules);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "date", date);
            ViewAllSlotsSchedulesOverride(callInfo, date);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToConfirmationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.ConfirmationViewModel viewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectToConfirmation(MaProgramez.Website.ViewModels.ConfirmationViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectToConfirmation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            RedirectToConfirmationOverride(callInfo, viewModel);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
