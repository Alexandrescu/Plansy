// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MaProgramez.Website.Controllers
{
    public partial class ManageController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ManageController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ContractsList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ContractsList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LinkLogin()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LinkLogin);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ManageLogins()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ManageLogins);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Settings()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Settings);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateUserDetails()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateUserDetails);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult VerifyPhoneNumber()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VerifyPhoneNumber);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult InvoiceList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InvoiceList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RedirectToConfirmation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectToConfirmation);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ManageController Actions { get { return MVC.Manage; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Manage";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Manage";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string AddPhoneNumber = "AddPhoneNumber";
            public readonly string ChangePassword = "ChangePassword";
            public readonly string ContractsList = "ContractsList";
            public readonly string DisableTFA = "DisableTFA";
            public readonly string EnableTFA = "EnableTFA";
            public readonly string ForgetBrowser = "ForgetBrowser";
            public readonly string Index = "Index";
            public readonly string LinkLogin = "LinkLogin";
            public readonly string LinkLoginCallback = "LinkLoginCallback";
            public readonly string ManageLogins = "ManageLogins";
            public readonly string RememberBrowser = "RememberBrowser";
            public readonly string RemoveLogin = "RemoveLogin";
            public readonly string RemovePhoneNumber = "RemovePhoneNumber";
            public readonly string SetPassword = "SetPassword";
            public readonly string Settings = "Settings";
            public readonly string UpdateUserDetails = "UpdateUserDetails";
            public readonly string VerifyPhoneNumber = "VerifyPhoneNumber";
            public readonly string InvoiceList = "InvoiceList";
            public readonly string RedirectToConfirmation = "RedirectToConfirmation";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string AddPhoneNumber = "AddPhoneNumber";
            public const string ChangePassword = "ChangePassword";
            public const string ContractsList = "ContractsList";
            public const string DisableTFA = "DisableTFA";
            public const string EnableTFA = "EnableTFA";
            public const string ForgetBrowser = "ForgetBrowser";
            public const string Index = "Index";
            public const string LinkLogin = "LinkLogin";
            public const string LinkLoginCallback = "LinkLoginCallback";
            public const string ManageLogins = "ManageLogins";
            public const string RememberBrowser = "RememberBrowser";
            public const string RemoveLogin = "RemoveLogin";
            public const string RemovePhoneNumber = "RemovePhoneNumber";
            public const string SetPassword = "SetPassword";
            public const string Settings = "Settings";
            public const string UpdateUserDetails = "UpdateUserDetails";
            public const string VerifyPhoneNumber = "VerifyPhoneNumber";
            public const string InvoiceList = "InvoiceList";
            public const string RedirectToConfirmation = "RedirectToConfirmation";
        }


        static readonly ActionParamsClass_AddPhoneNumber s_params_AddPhoneNumber = new ActionParamsClass_AddPhoneNumber();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddPhoneNumber AddPhoneNumberParams { get { return s_params_AddPhoneNumber; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddPhoneNumber
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ChangePassword s_params_ChangePassword = new ActionParamsClass_ChangePassword();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangePassword ChangePasswordParams { get { return s_params_ChangePassword; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangePassword
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ContractsList s_params_ContractsList = new ActionParamsClass_ContractsList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ContractsList ContractsListParams { get { return s_params_ContractsList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ContractsList
        {
            public readonly string page = "page";
            public readonly string sortBy = "sortBy";
            public readonly string filterBy = "filterBy";
            public readonly string ascending = "ascending";
        }
        static readonly ActionParamsClass_LinkLogin s_params_LinkLogin = new ActionParamsClass_LinkLogin();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LinkLogin LinkLoginParams { get { return s_params_LinkLogin; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LinkLogin
        {
            public readonly string provider = "provider";
        }
        static readonly ActionParamsClass_ManageLogins s_params_ManageLogins = new ActionParamsClass_ManageLogins();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ManageLogins ManageLoginsParams { get { return s_params_ManageLogins; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ManageLogins
        {
            public readonly string message = "message";
        }
        static readonly ActionParamsClass_RemoveLogin s_params_RemoveLogin = new ActionParamsClass_RemoveLogin();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveLogin RemoveLoginParams { get { return s_params_RemoveLogin; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveLogin
        {
            public readonly string loginProvider = "loginProvider";
            public readonly string providerKey = "providerKey";
        }
        static readonly ActionParamsClass_SetPassword s_params_SetPassword = new ActionParamsClass_SetPassword();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetPassword SetPasswordParams { get { return s_params_SetPassword; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetPassword
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Settings s_params_Settings = new ActionParamsClass_Settings();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Settings SettingsParams { get { return s_params_Settings; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Settings
        {
            public readonly string message = "message";
        }
        static readonly ActionParamsClass_UpdateUserDetails s_params_UpdateUserDetails = new ActionParamsClass_UpdateUserDetails();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateUserDetails UpdateUserDetailsParams { get { return s_params_UpdateUserDetails; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateUserDetails
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_VerifyPhoneNumber s_params_VerifyPhoneNumber = new ActionParamsClass_VerifyPhoneNumber();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_VerifyPhoneNumber VerifyPhoneNumberParams { get { return s_params_VerifyPhoneNumber; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_VerifyPhoneNumber
        {
            public readonly string phoneNumber = "phoneNumber";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_InvoiceList s_params_InvoiceList = new ActionParamsClass_InvoiceList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_InvoiceList InvoiceListParams { get { return s_params_InvoiceList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_InvoiceList
        {
            public readonly string userId = "userId";
            public readonly string page = "page";
            public readonly string sortBy = "sortBy";
            public readonly string filterBy = "filterBy";
            public readonly string ascending = "ascending";
        }
        static readonly ActionParamsClass_RedirectToConfirmation s_params_RedirectToConfirmation = new ActionParamsClass_RedirectToConfirmation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToConfirmation RedirectToConfirmationParams { get { return s_params_RedirectToConfirmation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToConfirmation
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AddAddress = "AddAddress";
                public readonly string AddPhoneNumber = "AddPhoneNumber";
                public readonly string ChangePassword = "ChangePassword";
                public readonly string ContractsList = "ContractsList";
                public readonly string Index = "Index";
                public readonly string InvoiceList = "InvoiceList";
                public readonly string ManageLogins = "ManageLogins";
                public readonly string SetPassword = "SetPassword";
                public readonly string Settings = "Settings";
                public readonly string VerifyPhoneNumber = "VerifyPhoneNumber";
            }
            public readonly string AddAddress = "~/Views/Manage/AddAddress.cshtml";
            public readonly string AddPhoneNumber = "~/Views/Manage/AddPhoneNumber.cshtml";
            public readonly string ChangePassword = "~/Views/Manage/ChangePassword.cshtml";
            public readonly string ContractsList = "~/Views/Manage/ContractsList.cshtml";
            public readonly string Index = "~/Views/Manage/Index.cshtml";
            public readonly string InvoiceList = "~/Views/Manage/InvoiceList.cshtml";
            public readonly string ManageLogins = "~/Views/Manage/ManageLogins.cshtml";
            public readonly string SetPassword = "~/Views/Manage/SetPassword.cshtml";
            public readonly string Settings = "~/Views/Manage/Settings.cshtml";
            public readonly string VerifyPhoneNumber = "~/Views/Manage/VerifyPhoneNumber.cshtml";
            static readonly _PartialViewsClass s_PartialViews = new _PartialViewsClass();
            public _PartialViewsClass PartialViews { get { return s_PartialViews; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _PartialViewsClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string _AddAddress = "_AddAddress";
                    public readonly string _AddressList = "_AddressList";
                    public readonly string _AddressListItem = "_AddressListItem";
                    public readonly string _PersonalDetails = "_PersonalDetails";
                }
                public readonly string _AddAddress = "~/Views/Manage/PartialViews/_AddAddress.cshtml";
                public readonly string _AddressList = "~/Views/Manage/PartialViews/_AddressList.cshtml";
                public readonly string _AddressListItem = "~/Views/Manage/PartialViews/_AddressListItem.cshtml";
                public readonly string _PersonalDetails = "~/Views/Manage/PartialViews/_PersonalDetails.cshtml";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ManageController : MaProgramez.Website.Controllers.ManageController
    {
        public T4MVC_ManageController() : base(Dummy.Instance) { }

        [NonAction]
        partial void AddPhoneNumberOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddPhoneNumber()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddPhoneNumber);
            AddPhoneNumberOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddPhoneNumberOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.AddPhoneNumberViewModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> AddPhoneNumber(MaProgramez.Website.ViewModels.AddPhoneNumberViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddPhoneNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddPhoneNumberOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangePassword()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
            ChangePasswordOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.ChangePasswordViewModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ChangePassword(MaProgramez.Website.ViewModels.ChangePasswordViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ChangePasswordOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void ContractsListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? page, string sortBy, string filterBy, bool ascending);

        [NonAction]
        public override System.Web.Mvc.ActionResult ContractsList(int? page, string sortBy, string filterBy, bool ascending)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ContractsList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sortBy", sortBy);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filterBy", filterBy);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ascending", ascending);
            ContractsListOverride(callInfo, page, sortBy, filterBy, ascending);
            return callInfo;
        }

        [NonAction]
        partial void DisableTFAOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DisableTFA()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DisableTFA);
            DisableTFAOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void EnableTFAOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> EnableTFA()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EnableTFA);
            EnableTFAOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void ForgetBrowserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ForgetBrowser()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForgetBrowser);
            ForgetBrowserOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void LinkLoginOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string provider);

        [NonAction]
        public override System.Web.Mvc.ActionResult LinkLogin(string provider)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LinkLogin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "provider", provider);
            LinkLoginOverride(callInfo, provider);
            return callInfo;
        }

        [NonAction]
        partial void LinkLoginCallbackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> LinkLoginCallback()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LinkLoginCallback);
            LinkLoginCallbackOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void ManageLoginsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.Controllers.ManageController.ManageMessageId? message);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ManageLogins(MaProgramez.Website.Controllers.ManageController.ManageMessageId? message)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ManageLogins);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ManageLoginsOverride(callInfo, message);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void RememberBrowserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult RememberBrowser()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RememberBrowser);
            RememberBrowserOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RemoveLoginOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult RemoveLogin()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveLogin);
            RemoveLoginOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RemoveLoginOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string loginProvider, string providerKey);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> RemoveLogin(string loginProvider, string providerKey)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveLogin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "loginProvider", loginProvider);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "providerKey", providerKey);
            RemoveLoginOverride(callInfo, loginProvider, providerKey);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void RemovePhoneNumberOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> RemovePhoneNumber()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemovePhoneNumber);
            RemovePhoneNumberOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void SetPasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetPassword()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetPassword);
            SetPasswordOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SetPasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.SetPasswordViewModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SetPassword(MaProgramez.Website.ViewModels.SetPasswordViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetPassword);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SetPasswordOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void SettingsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.Controllers.ManageController.ManageMessageId? message);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Settings(MaProgramez.Website.Controllers.ManageController.ManageMessageId? message)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Settings);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            SettingsOverride(callInfo, message);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void UpdateUserDetailsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.IndexViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateUserDetails(MaProgramez.Website.ViewModels.IndexViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateUserDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            UpdateUserDetailsOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void VerifyPhoneNumberOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string phoneNumber);

        [NonAction]
        public override System.Web.Mvc.ActionResult VerifyPhoneNumber(string phoneNumber)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VerifyPhoneNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "phoneNumber", phoneNumber);
            VerifyPhoneNumberOverride(callInfo, phoneNumber);
            return callInfo;
        }

        [NonAction]
        partial void VerifyPhoneNumberOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.VerifyPhoneNumberViewModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> VerifyPhoneNumber(MaProgramez.Website.ViewModels.VerifyPhoneNumberViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VerifyPhoneNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            VerifyPhoneNumberOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void InvoiceListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userId, int? page, string sortBy, string filterBy, bool ascending);

        [NonAction]
        public override System.Web.Mvc.ActionResult InvoiceList(string userId, int? page, string sortBy, string filterBy, bool ascending)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InvoiceList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sortBy", sortBy);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filterBy", filterBy);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ascending", ascending);
            InvoiceListOverride(callInfo, userId, page, sortBy, filterBy, ascending);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToConfirmationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.ConfirmationViewModel viewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectToConfirmation(MaProgramez.Website.ViewModels.ConfirmationViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectToConfirmation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            RedirectToConfirmationOverride(callInfo, viewModel);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
