// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static MaProgramez.Website.Controllers.AccountController Account = new MaProgramez.Website.Controllers.T4MVC_AccountController();
    public static MaProgramez.Website.Controllers.BaseController Base = new MaProgramez.Website.Controllers.T4MVC_BaseController();
    public static MaProgramez.Website.Controllers.ErrorController Error = new MaProgramez.Website.Controllers.T4MVC_ErrorController();
    public static MaProgramez.Website.Controllers.HomeController Home = new MaProgramez.Website.Controllers.T4MVC_HomeController();
    public static MaProgramez.Website.Controllers.InvoiceController Invoice = new MaProgramez.Website.Controllers.T4MVC_InvoiceController();
    public static MaProgramez.Website.Controllers.ManageController Manage = new MaProgramez.Website.Controllers.T4MVC_ManageController();
    public static MaProgramez.Website.Controllers.NetopiaMobilPayController NetopiaMobilPay = new MaProgramez.Website.Controllers.T4MVC_NetopiaMobilPayController();
    public static MaProgramez.Website.Controllers.NotificationController Notification = new MaProgramez.Website.Controllers.T4MVC_NotificationController();
    public static MaProgramez.Website.Controllers.ReportController Report = new MaProgramez.Website.Controllers.T4MVC_ReportController();
    public static MaProgramez.Website.Controllers.RolesAdminController RolesAdmin = new MaProgramez.Website.Controllers.T4MVC_RolesAdminController();
    public static MaProgramez.Website.Controllers.ScheduleController Schedule = new MaProgramez.Website.Controllers.T4MVC_ScheduleController();
    public static MaProgramez.Website.Controllers.ServiceController Service = new MaProgramez.Website.Controllers.T4MVC_ServiceController();
    public static MaProgramez.Website.Controllers.UsersAdminController UsersAdmin = new MaProgramez.Website.Controllers.T4MVC_UsersAdminController();
    public static T4MVC.MailController Mail = new T4MVC.MailController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
    public static T4MVC.SitemapController Sitemap = new T4MVC.SitemapController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string AnimOnScroll_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AnimOnScroll.min.js") ? Url("AnimOnScroll.min.js") : Url("AnimOnScroll.js");
        public static readonly string bootstrap_datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datepicker.min.js") ? Url("bootstrap-datepicker.min.js") : Url("bootstrap-datepicker.js");
        public static readonly string bootstrap_rating_input_min_js = Url("bootstrap-rating-input.min.js");
        public static readonly string bootstrap_select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-select.min.js") ? Url("bootstrap-select.min.js") : Url("bootstrap-select.js");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string chart_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/chart.min.js") ? Url("chart.min.js") : Url("chart.js");
        public static readonly string classie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/classie.min.js") ? Url("classie.min.js") : Url("classie.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class cldr {
            private const string URLPATH = "~/Scripts/cldr";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string event_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/event.min.js") ? Url("event.min.js") : Url("event.js");
            public static readonly string supplemental_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/supplemental.min.js") ? Url("supplemental.min.js") : Url("supplemental.js");
            public static readonly string unresolved_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/unresolved.min.js") ? Url("unresolved.min.js") : Url("unresolved.js");
        }
    
        public static readonly string cldr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cldr.min.js") ? Url("cldr.min.js") : Url("cldr.js");
        public static readonly string ClickDeskOnlineSupport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ClickDeskOnlineSupport.min.js") ? Url("ClickDeskOnlineSupport.min.js") : Url("ClickDeskOnlineSupport.js");
        public static readonly string custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/custom.min.js") ? Url("custom.min.js") : Url("custom.js");
        public static readonly string daypilot_all_min_js = Url("daypilot-all.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class globalize {
            private const string URLPATH = "~/Scripts/globalize";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string currency_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/currency.min.js") ? Url("currency.min.js") : Url("currency.js");
            public static readonly string date_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/date.min.js") ? Url("date.min.js") : Url("date.js");
            public static readonly string message_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/message.min.js") ? Url("message.min.js") : Url("message.js");
            public static readonly string number_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/number.min.js") ? Url("number.min.js") : Url("number.js");
            public static readonly string plural_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plural.min.js") ? Url("plural.min.js") : Url("plural.js");
            public static readonly string relative_time_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/relative-time.min.js") ? Url("relative-time.min.js") : Url("relative-time.js");
        }
    
        public static readonly string globalize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.min.js") ? Url("globalize.min.js") : Url("globalize.js");
        public static readonly string GoogleAnalytics_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/GoogleAnalytics.min.js") ? Url("GoogleAnalytics.min.js") : Url("GoogleAnalytics.js");
        public static readonly string imagesloaded_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/imagesloaded.min.js") ? Url("imagesloaded.min.js") : Url("imagesloaded.js");
        public static readonly string index_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/index.min.js") ? Url("index.min.js") : Url("index.js");
        public static readonly string jquery_1_11_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.11.1.min.js") ? Url("jquery-1.11.1.min.js") : Url("jquery-1.11.1.js");
        public static readonly string jquery_1_11_1_min_js = Url("jquery-1.11.1.min.js");
        public static readonly string jquery_2_1_4_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.4.intellisense.min.js") ? Url("jquery-2.1.4.intellisense.min.js") : Url("jquery-2.1.4.intellisense.js");
        public static readonly string jquery_2_1_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.4.min.js") ? Url("jquery-2.1.4.min.js") : Url("jquery-2.1.4.js");
        public static readonly string jquery_2_1_4_min_js = Url("jquery-2.1.4.min.js");
        public static readonly string jquery_2_1_4_min_map = Url("jquery-2.1.4.min.map");
        public static readonly string jquery_nanoscroller_min_js = Url("jquery.nanoscroller.min.js");
        public static readonly string jquery_nanoscroller_min_js_map = Url("jquery.nanoscroller.min.js.map");
        public static readonly string jquery_signalR_2_2_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.signalR-2.2.0.min.js") ? Url("jquery.signalR-2.2.0.min.js") : Url("jquery.signalR-2.2.0.js");
        public static readonly string jquery_signalR_2_2_0_min_js = Url("jquery.signalR-2.2.0.min.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_globalize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.globalize.min.js") ? Url("jquery.validate.globalize.min.js") : Url("jquery.validate.globalize.js");
        public static readonly string jquery_validate_globalize_min_js = Url("jquery.validate.globalize.min.js");
        public static readonly string jquery_validate_globalize_min_js_map = Url("jquery.validate.globalize.min.js.map");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string jquery_waypoints_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.waypoints.min.js") ? Url("jquery.waypoints.min.js") : Url("jquery.waypoints.js");
        public static readonly string knob_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knob.min.js") ? Url("knob.min.js") : Url("knob.js");
        public static readonly string load_image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/load-image.min.js") ? Url("load-image.min.js") : Url("load-image.js");
        public static readonly string masonry_pkgd_min_js = Url("masonry.pkgd.min.js");
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
        public static readonly string modernizr_custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr.custom.min.js") ? Url("modernizr.custom.min.js") : Url("modernizr.custom.js");
        public static readonly string nav_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nav.min.js") ? Url("nav.min.js") : Url("nav.js");
        public static readonly string npm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/npm.min.js") ? Url("npm.min.js") : Url("npm.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Pages {
            private const string URLPATH = "~/Scripts/Pages";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string Address_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Address.min.js") ? Url("Address.min.js") : Url("Address.js");
            public static readonly string AddUser_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AddUser.min.js") ? Url("AddUser.min.js") : Url("AddUser.js");
            public static readonly string AdminDashboard_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AdminDashboard.min.js") ? Url("AdminDashboard.min.js") : Url("AdminDashboard.js");
            public static readonly string AgentDashboard_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AgentDashboard.min.js") ? Url("AgentDashboard.min.js") : Url("AgentDashboard.js");
            public static readonly string LandingPage_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LandingPage.min.js") ? Url("LandingPage.min.js") : Url("LandingPage.js");
            public static readonly string Message_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Message.min.js") ? Url("Message.min.js") : Url("Message.js");
            public static readonly string Notification_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Notification.min.js") ? Url("Notification.min.js") : Url("Notification.js");
            public static readonly string PersonalDetails_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PersonalDetails.min.js") ? Url("PersonalDetails.min.js") : Url("PersonalDetails.js");
            public static readonly string Scripts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Scripts.min.js") ? Url("Scripts.min.js") : Url("Scripts.js");
            public static readonly string SupplierDashboard_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SupplierDashboard.min.js") ? Url("SupplierDashboard.min.js") : Url("SupplierDashboard.js");
            public static readonly string UploadImages_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/UploadImages.min.js") ? Url("UploadImages.min.js") : Url("UploadImages.js");
            public static readonly string ValidationExtension_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ValidationExtension.min.js") ? Url("ValidationExtension.min.js") : Url("ValidationExtension.js");
        }
    
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_matchmedia_addListener_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.matchmedia.addListener.min.js") ? Url("respond.matchmedia.addListener.min.js") : Url("respond.matchmedia.addListener.js");
        public static readonly string respond_matchmedia_addListener_min_js = Url("respond.matchmedia.addListener.min.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        public static readonly string slick_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slick.min.js") ? Url("slick.min.js") : Url("slick.js");
        public static readonly string tiltfx_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tiltfx.min.js") ? Url("tiltfx.min.js") : Url("tiltfx.js");
        public static readonly string traficRanking_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/traficRanking.min.js") ? Url("traficRanking.min.js") : Url("traficRanking.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string animate_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/animate.min.css") ? Url("animate.min.css") : Url("animate.css");
             
        public static readonly string bootstrap_select_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-select.min.css") ? Url("bootstrap-select.min.css") : Url("bootstrap-select.css");
             
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
             
        public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
             
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string component_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/component.min.css") ? Url("component.min.css") : Url("component.css");
             
        public static readonly string custom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/custom.min.css") ? Url("custom.min.css") : Url("custom.css");
             
        public static readonly string datepicker3_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datepicker3.min.css") ? Url("datepicker3.min.css") : Url("datepicker3.css");
             
        public static readonly string default_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.css") ? Url("default.min.css") : Url("default.css");
             
        public static readonly string demo_not_used_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/demo-not-used.min.css") ? Url("demo-not-used.min.css") : Url("demo-not-used.css");
             
        public static readonly string demo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/demo.min.css") ? Url("demo.min.css") : Url("demo.css");
             
        public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
             
        public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            private const string URLPATH = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string codropsicons_eot = Url("codropsicons.eot");
            public static readonly string codropsicons_svg = Url("codropsicons.svg");
            public static readonly string codropsicons_ttf = Url("codropsicons.ttf");
            public static readonly string codropsicons_woff = Url("codropsicons.woff");
            public static readonly string ecoicon_dev_svg = Url("ecoicon.dev.svg");
            public static readonly string ecoicon_eot = Url("ecoicon.eot");
            public static readonly string ecoicon_svg = Url("ecoicon.svg");
            public static readonly string ecoicon_ttf = Url("ecoicon.ttf");
            public static readonly string ecoicon_woff = Url("ecoicon.woff");
            public static readonly string fontawesome_webfont_eot = Url("fontawesome-webfont.eot");
            public static readonly string fontawesome_webfont_svg = Url("fontawesome-webfont.svg");
            public static readonly string fontawesome_webfont_ttf = Url("fontawesome-webfont.ttf");
            public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
            public static readonly string fontawesome_webfont_woff2 = Url("fontawesome-webfont.woff2");
            public static readonly string FontAwesome_otf = Url("FontAwesome.otf");
            public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
            public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
            public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
            public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
            public static readonly string glyphicons_halflings_regular_woff2 = Url("glyphicons-halflings-regular.woff2");
            public static readonly string lato_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lato.min.css") ? Url("lato.min.css") : Url("lato.css");
                 
            public static readonly string open_sans_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/open-sans.min.css") ? Url("open-sans.min.css") : Url("open-sans.css");
                 
            public static readonly string slick_eot = Url("slick.eot");
            public static readonly string slick_svg = Url("slick.svg");
            public static readonly string slick_ttf = Url("slick.ttf");
            public static readonly string slick_woff = Url("slick.woff");
        }
    
        public static readonly string footer_distributed_with_contact_form_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/footer-distributed-with-contact-form.min.css") ? Url("footer-distributed-with-contact-form.min.css") : Url("footer-distributed-with-contact-form.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            private const string URLPATH = "~/Content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string ajax_loader_gif = Url("ajax-loader.gif");
            public static readonly string android_png = Url("android.png");
            public static readonly string APPLE_png = Url("APPLE.png");
            public static readonly string appstore_png = Url("appstore.png");
            public static readonly string auto_png = Url("auto.png");
            public static readonly string autoFill_png = Url("autoFill.png");
            public static readonly string background_png = Url("background.png");
            public static readonly string background__png = Url("background_.png");
            public static readonly string beauty_png = Url("beauty.png");
            public static readonly string block_png = Url("block.png");
            public static readonly string bottom_ticket_black_png = Url("bottom-ticket-black.png");
            public static readonly string bottom_ticket_footer_all_png = Url("bottom-ticket-footer-all.png");
            public static readonly string bottom_ticket_png = Url("bottom-ticket.png");
            public static readonly string bottom_ticket2_png = Url("bottom-ticket2.png");
            public static readonly string call_png = Url("call.png");
            public static readonly string cover_jpg = Url("cover.jpg");
            public static readonly string cover_png = Url("cover.png");
            public static readonly string cover2_jpg = Url("cover2.jpg");
            public static readonly string duminica_png = Url("duminica.png");
            public static readonly string en_png = Url("en.png");
            public static readonly string facebook_png = Url("facebook.png");
            public static readonly string footer_bg_jpg = Url("footer-bg.jpg");
            public static readonly string GlobeSSL_Logo_jpg = Url("GlobeSSL-Logo.jpg");
            public static readonly string google_png = Url("google.png");
            public static readonly string googleplaystore_png = Url("googleplaystore.png");
            public static readonly string header_bg_png = Url("header-bg.png");
            public static readonly string health_png = Url("health.png");
            public static readonly string healthFill_png = Url("healthFill.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class icons {
                private const string URLPATH = "~/Content/images/icons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string amex_icon_png = Url("amex-icon.png");
                public static readonly string atm_icon_png = Url("atm-icon.png");
                public static readonly string bank_icon_png = Url("bank-icon.png");
                public static readonly string calculation_icon_png = Url("calculation-icon.png");
                public static readonly string calculator_icon_png = Url("calculator-icon.png");
                public static readonly string calendar_icon_png = Url("calendar-icon.png");
                public static readonly string certificate_icon_png = Url("certificate-icon.png");
                public static readonly string cheque_icon_png = Url("cheque-icon.png");
                public static readonly string coins_icon_png = Url("coins-icon.png");
                public static readonly string cout_icon_png = Url("cout-icon.png");
                public static readonly string diamond_icon_png = Url("diamond-icon.png");
                public static readonly string dislike_icon_png = Url("dislike-icon.png");
                public static readonly string dollar_coin_icon_png = Url("dollar-coin-icon.png");
                public static readonly string dollar_collection_icon_png = Url("dollar-collection-icon.png");
                public static readonly string dollar_icon_png = Url("dollar-icon.png");
                public static readonly string dollar_rotation_icon_png = Url("dollar-rotation-icon.png");
                public static readonly string dollar_stat_icon_png = Url("dollar-stat-icon.png");
                public static readonly string euro_coin_icon_png = Url("euro-coin-icon.png");
                public static readonly string file_icon_png = Url("file-icon.png");
                public static readonly string find_icon_png = Url("find-icon.png");
                public static readonly string flow_market_icon_png = Url("flow-market-icon.png");
                public static readonly string global_icon_png = Url("global-icon.png");
                public static readonly string ideas_icon_png = Url("ideas-icon.png");
                public static readonly string keys_icon_png = Url("keys-icon.png");
                public static readonly string like_icon_png = Url("like-icon.png");
                public static readonly string lock_icon_png = Url("lock-icon.png");
                public static readonly string market_flow_icon_png = Url("market-flow-icon.png");
                public static readonly string market_icon_png = Url("market-icon.png");
                public static readonly string master_card_icon_png = Url("master-card-icon.png");
                public static readonly string mobile_statistics_icon_png = Url("mobile-statistics-icon.png");
                public static readonly string money_icon_png = Url("money-icon.png");
                public static readonly string name_card_icon_png = Url("name-card-icon.png");
                public static readonly string order_icon_png = Url("order-icon.png");
                public static readonly string paypal_icon_png = Url("paypal-icon.png");
                public static readonly string percentage_icon_png = Url("percentage-icon.png");
                public static readonly string person_icon_png = Url("person-icon.png");
                public static readonly string puzzle_icon_png = Url("puzzle-icon.png");
                public static readonly string recycle_bin_icon_png = Url("recycle-bin-icon.png");
                public static readonly string settings_icon_png = Url("settings-icon.png");
                public static readonly string shield_icon_png = Url("shield-icon.png");
                public static readonly string stat_icon_png = Url("stat-icon.png");
                public static readonly string statistics_market_icon_png = Url("statistics-market-icon.png");
                public static readonly string system_analysis_icon_png = Url("system-analysis-icon.png");
                public static readonly string system_settings_icon_png = Url("system-settings-icon.png");
                public static readonly string target_market_icon_png = Url("target-market-icon.png");
                public static readonly string time_icon_png = Url("time-icon.png");
                public static readonly string timer_icon_png = Url("timer-icon.png");
                public static readonly string unlock_icon_png = Url("unlock-icon.png");
                public static readonly string visa_card_icon_png = Url("visa-card-icon.png");
                public static readonly string world_stat_icon_png = Url("world-stat-icon.png");
            }
        
            public static readonly string icons_png = Url("icons.png");
            public static readonly string ipad_mini_png = Url("ipad-mini.png");
            public static readonly string ipad_png = Url("ipad.png");
            public static readonly string joi_png = Url("joi.png");
            public static readonly string landing_page_png = Url("landing-page.png");
            public static readonly string laptop_png = Url("laptop.png");
            public static readonly string login_bg_png = Url("login-bg.png");
            public static readonly string login_bg2_png = Url("login-bg2.png");
            public static readonly string logo_bar_png = Url("logo-bar.png");
            public static readonly string logo_box_png = Url("logo-box.png");
            public static readonly string logo_circle_png = Url("logo-circle.png");
            public static readonly string logo_inline_png = Url("logo-inline.png");
            public static readonly string logo_radius_png = Url("logo-radius.png");
            public static readonly string logo2_png = Url("logo2.png");
            public static readonly string logo3_png = Url("logo3.png");
            public static readonly string logoM_png = Url("logoM.png");
            public static readonly string logoNew_png = Url("logoNew.png");
            public static readonly string logoNew2_png = Url("logoNew2.png");
            public static readonly string logoScheda_png = Url("logoScheda.png");
            public static readonly string luni_png = Url("luni.png");
            public static readonly string mac_png = Url("mac.png");
            public static readonly string map_png = Url("map.png");
            public static readonly string map2_png = Url("map2.png");
            public static readonly string marti_png = Url("marti.png");
            public static readonly string mastercard_png = Url("mastercard.png");
            public static readonly string miercuri_png = Url("miercuri.png");
            public static readonly string netopia_png = Url("netopia.png");
            public static readonly string nl_png = Url("nl.png");
            public static readonly string no_photo_png = Url("no-photo.png");
            public static readonly string pattern_png = Url("pattern.png");
            public static readonly string pets_png = Url("pets.png");
            public static readonly string petsFill_png = Url("petsFill.png");
            public static readonly string phone_png = Url("phone.png");
            public static readonly string positivessl_icon_png = Url("positivessl-icon.png");
            public static readonly string ro_png = Url("ro.png");
            public static readonly string sambata_png = Url("sambata.png");
            public static readonly string sander_jpg = Url("sander.jpg");
            public static readonly string sport_png = Url("sport.png");
            public static readonly string sportFill_png = Url("sportFill.png");
            public static readonly string twitter_png = Url("twitter.png");
            public static readonly string up_toticket_png = Url("up-toticket.png");
            public static readonly string video_image_png = Url("video-image.png");
            public static readonly string vineri_png = Url("vineri.png");
            public static readonly string Visa_Logo_png = Url("Visa_Logo.png");
            public static readonly string wall_png = Url("wall.png");
            public static readonly string wall2_png = Url("wall2.png");
        }
    
        public static readonly string ionicons_min_css = Url("ionicons.min.css");
        public static readonly string LandingPage_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LandingPage.min.css") ? Url("LandingPage.min.css") : Url("LandingPage.css");
             
        public static readonly string nanoscroller_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nanoscroller.min.css") ? Url("nanoscroller.min.css") : Url("nanoscroller.css");
             
        public static readonly string normalize_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/normalize.min.css") ? Url("normalize.min.css") : Url("normalize.css");
             
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
             
        public static readonly string slick_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slick.min.css") ? Url("slick.min.css") : Url("slick.css");
             
        public static readonly string slick_css_map = Url("slick.css.map");
        public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/style.min.css") ? Url("style.min.css") : Url("style.css");
             
        public static readonly string tilteffect_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tilteffect.min.css") ? Url("tilteffect.min.css") : Url("tilteffect.css");
             
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class cldr 
            {
                public static class Assets
                {
                    public const string event_js = "~/Scripts/cldr/event.js"; 
                    public const string supplemental_js = "~/Scripts/cldr/supplemental.js"; 
                    public const string unresolved_js = "~/Scripts/cldr/unresolved.js"; 
                }
            }
            public static partial class globalize 
            {
                public static class Assets
                {
                    public const string currency_js = "~/Scripts/globalize/currency.js"; 
                    public const string date_js = "~/Scripts/globalize/date.js"; 
                    public const string message_js = "~/Scripts/globalize/message.js"; 
                    public const string number_js = "~/Scripts/globalize/number.js"; 
                    public const string plural_js = "~/Scripts/globalize/plural.js"; 
                    public const string relative_time_js = "~/Scripts/globalize/relative-time.js"; 
                }
            }
            public static partial class Pages 
            {
                public static class Assets
                {
                    public const string Address_js = "~/Scripts/Pages/Address.js"; 
                    public const string AddUser_js = "~/Scripts/Pages/AddUser.js"; 
                    public const string AdminDashboard_js = "~/Scripts/Pages/AdminDashboard.js"; 
                    public const string AgentDashboard_js = "~/Scripts/Pages/AgentDashboard.js"; 
                    public const string LandingPage_js = "~/Scripts/Pages/LandingPage.js"; 
                    public const string Message_js = "~/Scripts/Pages/Message.js"; 
                    public const string Notification_js = "~/Scripts/Pages/Notification.js"; 
                    public const string PersonalDetails_js = "~/Scripts/Pages/PersonalDetails.js"; 
                    public const string Scripts_js = "~/Scripts/Pages/Scripts.js"; 
                    public const string SupplierDashboard_js = "~/Scripts/Pages/SupplierDashboard.js"; 
                    public const string UploadImages_js = "~/Scripts/Pages/UploadImages.js"; 
                    public const string ValidationExtension_js = "~/Scripts/Pages/ValidationExtension.js"; 
                }
            }
            public static class Assets
            {
                public const string _references_js = "~/Scripts/_references.js"; 
                public const string AnimOnScroll_js = "~/Scripts/AnimOnScroll.js"; 
                public const string bootstrap_datepicker_js = "~/Scripts/bootstrap-datepicker.js"; 
                public const string bootstrap_rating_input_min_js = "~/Scripts/bootstrap-rating-input.min.js"; 
                public const string bootstrap_select_js = "~/Scripts/bootstrap-select.js"; 
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string chart_js = "~/Scripts/chart.js"; 
                public const string classie_js = "~/Scripts/classie.js"; 
                public const string cldr_js = "~/Scripts/cldr.js"; 
                public const string ClickDeskOnlineSupport_js = "~/Scripts/ClickDeskOnlineSupport.js"; 
                public const string custom_js = "~/Scripts/custom.js"; 
                public const string daypilot_all_min_js = "~/Scripts/daypilot-all.min.js"; 
                public const string globalize_js = "~/Scripts/globalize.js"; 
                public const string GoogleAnalytics_js = "~/Scripts/GoogleAnalytics.js"; 
                public const string imagesloaded_js = "~/Scripts/imagesloaded.js"; 
                public const string index_js = "~/Scripts/index.js"; 
                public const string jquery_1_11_1_js = "~/Scripts/jquery-1.11.1.js"; 
                public const string jquery_1_11_1_min_js = "~/Scripts/jquery-1.11.1.min.js"; 
                public const string jquery_2_1_4_intellisense_js = "~/Scripts/jquery-2.1.4.intellisense.js"; 
                public const string jquery_2_1_4_js = "~/Scripts/jquery-2.1.4.js"; 
                public const string jquery_2_1_4_min_js = "~/Scripts/jquery-2.1.4.min.js"; 
                public const string jquery_nanoscroller_min_js = "~/Scripts/jquery.nanoscroller.min.js"; 
                public const string jquery_signalR_2_2_0_js = "~/Scripts/jquery.signalR-2.2.0.js"; 
                public const string jquery_signalR_2_2_0_min_js = "~/Scripts/jquery.signalR-2.2.0.min.js"; 
                public const string jquery_unobtrusive_ajax_js = "~/Scripts/jquery.unobtrusive-ajax.js"; 
                public const string jquery_unobtrusive_ajax_min_js = "~/Scripts/jquery.unobtrusive-ajax.min.js"; 
                public const string jquery_validate_globalize_js = "~/Scripts/jquery.validate.globalize.js"; 
                public const string jquery_validate_globalize_min_js = "~/Scripts/jquery.validate.globalize.min.js"; 
                public const string jquery_validate_js = "~/Scripts/jquery.validate.js"; 
                public const string jquery_validate_min_js = "~/Scripts/jquery.validate.min.js"; 
                public const string jquery_validate_unobtrusive_js = "~/Scripts/jquery.validate.unobtrusive.js"; 
                public const string jquery_validate_unobtrusive_min_js = "~/Scripts/jquery.validate.unobtrusive.min.js"; 
                public const string jquery_waypoints_js = "~/Scripts/jquery.waypoints.js"; 
                public const string knob_js = "~/Scripts/knob.js"; 
                public const string load_image_js = "~/Scripts/load-image.js"; 
                public const string masonry_pkgd_min_js = "~/Scripts/masonry.pkgd.min.js"; 
                public const string modernizr_2_6_2_js = "~/Scripts/modernizr-2.6.2.js"; 
                public const string modernizr_custom_js = "~/Scripts/modernizr.custom.js"; 
                public const string nav_js = "~/Scripts/nav.js"; 
                public const string npm_js = "~/Scripts/npm.js"; 
                public const string respond_js = "~/Scripts/respond.js"; 
                public const string respond_matchmedia_addListener_js = "~/Scripts/respond.matchmedia.addListener.js"; 
                public const string respond_matchmedia_addListener_min_js = "~/Scripts/respond.matchmedia.addListener.min.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
                public const string slick_js = "~/Scripts/slick.js"; 
                public const string tiltfx_js = "~/Scripts/tiltfx.js"; 
                public const string traficRanking_js = "~/Scripts/traficRanking.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class fonts 
            {
                public static class Assets
                {
                    public const string lato_css = "~/Content/fonts/lato.css";
                    public const string open_sans_css = "~/Content/fonts/open-sans.css";
                }
            }
            public static partial class images 
            {
                public static partial class icons 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string animate_css = "~/Content/animate.css";
                public const string bootstrap_select_css = "~/Content/bootstrap-select.css";
                public const string bootstrap_theme_css = "~/Content/bootstrap-theme.css";
                public const string bootstrap_theme_min_css = "~/Content/bootstrap-theme.min.css";
                public const string bootstrap_css = "~/Content/bootstrap.css";
                public const string bootstrap_min_css = "~/Content/bootstrap.min.css";
                public const string component_css = "~/Content/component.css";
                public const string custom_css = "~/Content/custom.css";
                public const string datepicker3_css = "~/Content/datepicker3.css";
                public const string default_css = "~/Content/default.css";
                public const string demo_not_used_css = "~/Content/demo-not-used.css";
                public const string demo_css = "~/Content/demo.css";
                public const string font_awesome_css = "~/Content/font-awesome.css";
                public const string font_awesome_min_css = "~/Content/font-awesome.min.css";
                public const string footer_distributed_with_contact_form_css = "~/Content/footer-distributed-with-contact-form.css";
                public const string ionicons_min_css = "~/Content/ionicons.min.css";
                public const string LandingPage_css = "~/Content/LandingPage.css";
                public const string nanoscroller_css = "~/Content/nanoscroller.css";
                public const string normalize_css = "~/Content/normalize.css";
                public const string Site_css = "~/Content/Site.css";
                public const string slick_css = "~/Content/slick.css";
                public const string style_css = "~/Content/style.css";
                public const string tilteffect_css = "~/Content/tilteffect.css";
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


