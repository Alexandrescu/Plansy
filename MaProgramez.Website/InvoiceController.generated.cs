// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MaProgramez.Website.Controllers
{
    public partial class InvoiceController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InvoiceController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected InvoiceController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult InvoiceList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InvoiceList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AdminInvoiceList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AdminInvoiceList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddInvoicePayment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInvoicePayment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditInvoicePayment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInvoicePayment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RemoveInvoicePayment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveInvoicePayment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ViewInvoice()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewInvoice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult InvoicePdf()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InvoicePdf);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ReceiptPdf()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReceiptPdf);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditInvoiceLine()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInvoiceLine);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RemoveInvoiceLine()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveInvoiceLine);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddInvoiceLine()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInvoiceLine);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SendPaymentLink()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendPaymentLink);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SendInvoiceLink()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendInvoiceLink);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SendReceiptLink()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendReceiptLink);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RedirectToConfirmation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectToConfirmation);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InvoiceController Actions { get { return MVC.Invoice; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Invoice";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Invoice";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string InvoiceList = "InvoiceList";
            public readonly string AdminInvoiceList = "AdminInvoiceList";
            public readonly string AddInvoicePayment = "AddInvoicePayment";
            public readonly string EditInvoicePayment = "EditInvoicePayment";
            public readonly string RemoveInvoicePayment = "RemoveInvoicePayment";
            public readonly string ViewInvoice = "ViewInvoice";
            public readonly string InvoicePdf = "InvoicePdf";
            public readonly string ReceiptPdf = "ReceiptPdf";
            public readonly string EditInvoiceLine = "EditInvoiceLine";
            public readonly string RemoveInvoiceLine = "RemoveInvoiceLine";
            public readonly string AddInvoiceLine = "AddInvoiceLine";
            public readonly string SendPaymentLink = "SendPaymentLink";
            public readonly string SendInvoiceLink = "SendInvoiceLink";
            public readonly string SendReceiptLink = "SendReceiptLink";
            public readonly string GenerateCommisionInvoices = "GenerateCommisionInvoices";
            public readonly string RedirectToConfirmation = "RedirectToConfirmation";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string InvoiceList = "InvoiceList";
            public const string AdminInvoiceList = "AdminInvoiceList";
            public const string AddInvoicePayment = "AddInvoicePayment";
            public const string EditInvoicePayment = "EditInvoicePayment";
            public const string RemoveInvoicePayment = "RemoveInvoicePayment";
            public const string ViewInvoice = "ViewInvoice";
            public const string InvoicePdf = "InvoicePdf";
            public const string ReceiptPdf = "ReceiptPdf";
            public const string EditInvoiceLine = "EditInvoiceLine";
            public const string RemoveInvoiceLine = "RemoveInvoiceLine";
            public const string AddInvoiceLine = "AddInvoiceLine";
            public const string SendPaymentLink = "SendPaymentLink";
            public const string SendInvoiceLink = "SendInvoiceLink";
            public const string SendReceiptLink = "SendReceiptLink";
            public const string GenerateCommisionInvoices = "GenerateCommisionInvoices";
            public const string RedirectToConfirmation = "RedirectToConfirmation";
        }


        static readonly ActionParamsClass_InvoiceList s_params_InvoiceList = new ActionParamsClass_InvoiceList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_InvoiceList InvoiceListParams { get { return s_params_InvoiceList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_InvoiceList
        {
            public readonly string userId = "userId";
            public readonly string page = "page";
            public readonly string sortBy = "sortBy";
            public readonly string filterBy = "filterBy";
            public readonly string ascending = "ascending";
        }
        static readonly ActionParamsClass_AdminInvoiceList s_params_AdminInvoiceList = new ActionParamsClass_AdminInvoiceList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AdminInvoiceList AdminInvoiceListParams { get { return s_params_AdminInvoiceList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AdminInvoiceList
        {
            public readonly string userId = "userId";
            public readonly string page = "page";
            public readonly string sortBy = "sortBy";
            public readonly string filterBy = "filterBy";
            public readonly string ascending = "ascending";
        }
        static readonly ActionParamsClass_AddInvoicePayment s_params_AddInvoicePayment = new ActionParamsClass_AddInvoicePayment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddInvoicePayment AddInvoicePaymentParams { get { return s_params_AddInvoicePayment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddInvoicePayment
        {
            public readonly string invoiceHeaderId = "invoiceHeaderId";
            public readonly string payment = "payment";
        }
        static readonly ActionParamsClass_EditInvoicePayment s_params_EditInvoicePayment = new ActionParamsClass_EditInvoicePayment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditInvoicePayment EditInvoicePaymentParams { get { return s_params_EditInvoicePayment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditInvoicePayment
        {
            public readonly string invoicePaymentId = "invoicePaymentId";
            public readonly string payment = "payment";
        }
        static readonly ActionParamsClass_RemoveInvoicePayment s_params_RemoveInvoicePayment = new ActionParamsClass_RemoveInvoicePayment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveInvoicePayment RemoveInvoicePaymentParams { get { return s_params_RemoveInvoicePayment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveInvoicePayment
        {
            public readonly string invoicePaymentId = "invoicePaymentId";
        }
        static readonly ActionParamsClass_ViewInvoice s_params_ViewInvoice = new ActionParamsClass_ViewInvoice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewInvoice ViewInvoiceParams { get { return s_params_ViewInvoice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewInvoice
        {
            public readonly string invoiceHeaderId = "invoiceHeaderId";
            public readonly string userToken = "userToken";
        }
        static readonly ActionParamsClass_InvoicePdf s_params_InvoicePdf = new ActionParamsClass_InvoicePdf();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_InvoicePdf InvoicePdfParams { get { return s_params_InvoicePdf; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_InvoicePdf
        {
            public readonly string invoiceHeaderId = "invoiceHeaderId";
        }
        static readonly ActionParamsClass_ReceiptPdf s_params_ReceiptPdf = new ActionParamsClass_ReceiptPdf();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReceiptPdf ReceiptPdfParams { get { return s_params_ReceiptPdf; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReceiptPdf
        {
            public readonly string invoiceHeaderId = "invoiceHeaderId";
        }
        static readonly ActionParamsClass_EditInvoiceLine s_params_EditInvoiceLine = new ActionParamsClass_EditInvoiceLine();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditInvoiceLine EditInvoiceLineParams { get { return s_params_EditInvoiceLine; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditInvoiceLine
        {
            public readonly string invoiceLineId = "invoiceLineId";
            public readonly string line = "line";
        }
        static readonly ActionParamsClass_RemoveInvoiceLine s_params_RemoveInvoiceLine = new ActionParamsClass_RemoveInvoiceLine();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveInvoiceLine RemoveInvoiceLineParams { get { return s_params_RemoveInvoiceLine; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveInvoiceLine
        {
            public readonly string invoiceLineId = "invoiceLineId";
        }
        static readonly ActionParamsClass_AddInvoiceLine s_params_AddInvoiceLine = new ActionParamsClass_AddInvoiceLine();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddInvoiceLine AddInvoiceLineParams { get { return s_params_AddInvoiceLine; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddInvoiceLine
        {
            public readonly string invoiceHeaderId = "invoiceHeaderId";
            public readonly string line = "line";
        }
        static readonly ActionParamsClass_SendPaymentLink s_params_SendPaymentLink = new ActionParamsClass_SendPaymentLink();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendPaymentLink SendPaymentLinkParams { get { return s_params_SendPaymentLink; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendPaymentLink
        {
            public readonly string userId = "userId";
            public readonly string invoiceId = "invoiceId";
        }
        static readonly ActionParamsClass_SendInvoiceLink s_params_SendInvoiceLink = new ActionParamsClass_SendInvoiceLink();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendInvoiceLink SendInvoiceLinkParams { get { return s_params_SendInvoiceLink; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendInvoiceLink
        {
            public readonly string userId = "userId";
            public readonly string invoiceId = "invoiceId";
        }
        static readonly ActionParamsClass_SendReceiptLink s_params_SendReceiptLink = new ActionParamsClass_SendReceiptLink();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendReceiptLink SendReceiptLinkParams { get { return s_params_SendReceiptLink; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendReceiptLink
        {
            public readonly string userId = "userId";
            public readonly string invoiceId = "invoiceId";
        }
        static readonly ActionParamsClass_GenerateCommisionInvoices s_params_GenerateCommisionInvoices = new ActionParamsClass_GenerateCommisionInvoices();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GenerateCommisionInvoices GenerateCommisionInvoicesParams { get { return s_params_GenerateCommisionInvoices; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GenerateCommisionInvoices
        {
            public readonly string dateTime = "dateTime";
        }
        static readonly ActionParamsClass_RedirectToConfirmation s_params_RedirectToConfirmation = new ActionParamsClass_RedirectToConfirmation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToConfirmation RedirectToConfirmationParams { get { return s_params_RedirectToConfirmation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToConfirmation
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AddInvoiceLine = "AddInvoiceLine";
                public readonly string AddInvoicePayment = "AddInvoicePayment";
                public readonly string AdminInvoiceList = "AdminInvoiceList";
                public readonly string EditInvoiceLine = "EditInvoiceLine";
                public readonly string EditInvoicePayment = "EditInvoicePayment";
                public readonly string InvoiceList = "InvoiceList";
                public readonly string InvoicePdf = "InvoicePdf";
                public readonly string InvoicePdfVatZero = "InvoicePdfVatZero";
                public readonly string ReceiptPdf = "ReceiptPdf";
            }
            public readonly string AddInvoiceLine = "~/Views/Invoice/AddInvoiceLine.cshtml";
            public readonly string AddInvoicePayment = "~/Views/Invoice/AddInvoicePayment.cshtml";
            public readonly string AdminInvoiceList = "~/Views/Invoice/AdminInvoiceList.cshtml";
            public readonly string EditInvoiceLine = "~/Views/Invoice/EditInvoiceLine.cshtml";
            public readonly string EditInvoicePayment = "~/Views/Invoice/EditInvoicePayment.cshtml";
            public readonly string InvoiceList = "~/Views/Invoice/InvoiceList.cshtml";
            public readonly string InvoicePdf = "~/Views/Invoice/InvoicePdf.cshtml";
            public readonly string InvoicePdfVatZero = "~/Views/Invoice/InvoicePdfVatZero.cshtml";
            public readonly string ReceiptPdf = "~/Views/Invoice/ReceiptPdf.cshtml";
            static readonly _PartialViewsClass s_PartialViews = new _PartialViewsClass();
            public _PartialViewsClass PartialViews { get { return s_PartialViews; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _PartialViewsClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string _InvoiceList = "_InvoiceList";
                }
                public readonly string _InvoiceList = "~/Views/Invoice/PartialViews/_InvoiceList.cshtml";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_InvoiceController : MaProgramez.Website.Controllers.InvoiceController
    {
        public T4MVC_InvoiceController() : base(Dummy.Instance) { }

        [NonAction]
        partial void InvoiceListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userId, int? page, string sortBy, string filterBy, bool ascending);

        [NonAction]
        public override System.Web.Mvc.ActionResult InvoiceList(string userId, int? page, string sortBy, string filterBy, bool ascending)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InvoiceList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sortBy", sortBy);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filterBy", filterBy);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ascending", ascending);
            InvoiceListOverride(callInfo, userId, page, sortBy, filterBy, ascending);
            return callInfo;
        }

        [NonAction]
        partial void AdminInvoiceListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userId, int? page, string sortBy, string filterBy, bool ascending);

        [NonAction]
        public override System.Web.Mvc.ActionResult AdminInvoiceList(string userId, int? page, string sortBy, string filterBy, bool ascending)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AdminInvoiceList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sortBy", sortBy);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filterBy", filterBy);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ascending", ascending);
            AdminInvoiceListOverride(callInfo, userId, page, sortBy, filterBy, ascending);
            return callInfo;
        }

        [NonAction]
        partial void AddInvoicePaymentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int invoiceHeaderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddInvoicePayment(int invoiceHeaderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInvoicePayment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoiceHeaderId", invoiceHeaderId);
            AddInvoicePaymentOverride(callInfo, invoiceHeaderId);
            return callInfo;
        }

        [NonAction]
        partial void AddInvoicePaymentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Repository.Entities.InvoicePayment payment);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddInvoicePayment(MaProgramez.Repository.Entities.InvoicePayment payment)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInvoicePayment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "payment", payment);
            AddInvoicePaymentOverride(callInfo, payment);
            return callInfo;
        }

        [NonAction]
        partial void EditInvoicePaymentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int invoicePaymentId);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditInvoicePayment(int invoicePaymentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInvoicePayment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoicePaymentId", invoicePaymentId);
            EditInvoicePaymentOverride(callInfo, invoicePaymentId);
            return callInfo;
        }

        [NonAction]
        partial void EditInvoicePaymentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Repository.Entities.InvoicePayment payment);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditInvoicePayment(MaProgramez.Repository.Entities.InvoicePayment payment)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInvoicePayment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "payment", payment);
            EditInvoicePaymentOverride(callInfo, payment);
            return callInfo;
        }

        [NonAction]
        partial void RemoveInvoicePaymentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int invoicePaymentId);

        [NonAction]
        public override System.Web.Mvc.ActionResult RemoveInvoicePayment(int invoicePaymentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveInvoicePayment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoicePaymentId", invoicePaymentId);
            RemoveInvoicePaymentOverride(callInfo, invoicePaymentId);
            return callInfo;
        }

        [NonAction]
        partial void ViewInvoiceOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int invoiceHeaderId, string userToken);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewInvoice(int invoiceHeaderId, string userToken)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewInvoice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoiceHeaderId", invoiceHeaderId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userToken", userToken);
            ViewInvoiceOverride(callInfo, invoiceHeaderId, userToken);
            return callInfo;
        }

        [NonAction]
        partial void InvoicePdfOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int invoiceHeaderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult InvoicePdf(int invoiceHeaderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InvoicePdf);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoiceHeaderId", invoiceHeaderId);
            InvoicePdfOverride(callInfo, invoiceHeaderId);
            return callInfo;
        }

        [NonAction]
        partial void ReceiptPdfOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int invoiceHeaderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReceiptPdf(int invoiceHeaderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReceiptPdf);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoiceHeaderId", invoiceHeaderId);
            ReceiptPdfOverride(callInfo, invoiceHeaderId);
            return callInfo;
        }

        [NonAction]
        partial void EditInvoiceLineOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int invoiceLineId);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditInvoiceLine(int invoiceLineId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInvoiceLine);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoiceLineId", invoiceLineId);
            EditInvoiceLineOverride(callInfo, invoiceLineId);
            return callInfo;
        }

        [NonAction]
        partial void EditInvoiceLineOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Repository.Entities.InvoiceLine line);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditInvoiceLine(MaProgramez.Repository.Entities.InvoiceLine line)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInvoiceLine);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "line", line);
            EditInvoiceLineOverride(callInfo, line);
            return callInfo;
        }

        [NonAction]
        partial void RemoveInvoiceLineOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int invoiceLineId);

        [NonAction]
        public override System.Web.Mvc.ActionResult RemoveInvoiceLine(int invoiceLineId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveInvoiceLine);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoiceLineId", invoiceLineId);
            RemoveInvoiceLineOverride(callInfo, invoiceLineId);
            return callInfo;
        }

        [NonAction]
        partial void AddInvoiceLineOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int invoiceHeaderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddInvoiceLine(int invoiceHeaderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInvoiceLine);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoiceHeaderId", invoiceHeaderId);
            AddInvoiceLineOverride(callInfo, invoiceHeaderId);
            return callInfo;
        }

        [NonAction]
        partial void AddInvoiceLineOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Repository.Entities.InvoiceLine line);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddInvoiceLine(MaProgramez.Repository.Entities.InvoiceLine line)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInvoiceLine);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "line", line);
            AddInvoiceLineOverride(callInfo, line);
            return callInfo;
        }

        [NonAction]
        partial void SendPaymentLinkOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userId, int invoiceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SendPaymentLink(string userId, int invoiceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendPaymentLink);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoiceId", invoiceId);
            SendPaymentLinkOverride(callInfo, userId, invoiceId);
            return callInfo;
        }

        [NonAction]
        partial void SendInvoiceLinkOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userId, int invoiceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SendInvoiceLink(string userId, int invoiceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendInvoiceLink);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoiceId", invoiceId);
            SendInvoiceLinkOverride(callInfo, userId, invoiceId);
            return callInfo;
        }

        [NonAction]
        partial void SendReceiptLinkOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userId, int invoiceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SendReceiptLink(string userId, int invoiceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendReceiptLink);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "invoiceId", invoiceId);
            SendReceiptLinkOverride(callInfo, userId, invoiceId);
            return callInfo;
        }

        [NonAction]
        partial void GenerateCommisionInvoicesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.DateTime? dateTime);

        [NonAction]
        public override System.Web.Mvc.ActionResult GenerateCommisionInvoices(System.DateTime? dateTime)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GenerateCommisionInvoices);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateTime", dateTime);
            GenerateCommisionInvoicesOverride(callInfo, dateTime);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToConfirmationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.ConfirmationViewModel viewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectToConfirmation(MaProgramez.Website.ViewModels.ConfirmationViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectToConfirmation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            RedirectToConfirmationOverride(callInfo, viewModel);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
