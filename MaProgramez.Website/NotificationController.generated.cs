// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MaProgramez.Website.Controllers
{
    public partial class NotificationController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public NotificationController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected NotificationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MarkAsReadCanceledOfferNotifs()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkAsReadCanceledOfferNotifs);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MarkAsReadNotifs()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkAsReadNotifs);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RedirectToConfirmation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectToConfirmation);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public NotificationController Actions { get { return MVC.Notification; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Notification";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Notification";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string List = "List";
            public readonly string MarkAsReadCanceledOfferNotifs = "MarkAsReadCanceledOfferNotifs";
            public readonly string MarkAsReadNotifs = "MarkAsReadNotifs";
            public readonly string DeleteAll = "DeleteAll";
            public readonly string ReadAll = "ReadAll";
            public readonly string Delete = "Delete";
            public readonly string SendMessage = "SendMessage";
            public readonly string RedirectToConfirmation = "RedirectToConfirmation";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string List = "List";
            public const string MarkAsReadCanceledOfferNotifs = "MarkAsReadCanceledOfferNotifs";
            public const string MarkAsReadNotifs = "MarkAsReadNotifs";
            public const string DeleteAll = "DeleteAll";
            public const string ReadAll = "ReadAll";
            public const string Delete = "Delete";
            public const string SendMessage = "SendMessage";
            public const string RedirectToConfirmation = "RedirectToConfirmation";
        }


        static readonly ActionParamsClass_MarkAsReadCanceledOfferNotifs s_params_MarkAsReadCanceledOfferNotifs = new ActionParamsClass_MarkAsReadCanceledOfferNotifs();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkAsReadCanceledOfferNotifs MarkAsReadCanceledOfferNotifsParams { get { return s_params_MarkAsReadCanceledOfferNotifs; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkAsReadCanceledOfferNotifs
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_MarkAsReadNotifs s_params_MarkAsReadNotifs = new ActionParamsClass_MarkAsReadNotifs();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkAsReadNotifs MarkAsReadNotifsParams { get { return s_params_MarkAsReadNotifs; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkAsReadNotifs
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SendMessage s_params_SendMessage = new ActionParamsClass_SendMessage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendMessage SendMessageParams { get { return s_params_SendMessage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendMessage
        {
            public readonly string message = "message";
            public readonly string emails = "emails";
            public readonly string phoneNumbers = "phoneNumbers";
            public readonly string sendEmail = "sendEmail";
            public readonly string sendSms = "sendSms";
            public readonly string sendToSuppliers = "sendToSuppliers";
            public readonly string sendToClients = "sendToClients";
        }
        static readonly ActionParamsClass_RedirectToConfirmation s_params_RedirectToConfirmation = new ActionParamsClass_RedirectToConfirmation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToConfirmation RedirectToConfirmationParams { get { return s_params_RedirectToConfirmation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToConfirmation
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _NotificationRow = "_NotificationRow";
                public readonly string List = "List";
            }
            public readonly string _NotificationRow = "~/Views/Notification/_NotificationRow.cshtml";
            public readonly string List = "~/Views/Notification/List.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_NotificationController : MaProgramez.Website.Controllers.NotificationController
    {
        public T4MVC_NotificationController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult List()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.List);
            ListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void MarkAsReadCanceledOfferNotifsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult MarkAsReadCanceledOfferNotifs(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkAsReadCanceledOfferNotifs);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            MarkAsReadCanceledOfferNotifsOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void MarkAsReadNotifsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult MarkAsReadNotifs(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkAsReadNotifs);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            MarkAsReadNotifsOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAllOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteAll()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAll);
            DeleteAllOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ReadAllOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReadAll()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReadAll);
            ReadAllOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SendMessageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SendMessage()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendMessage);
            SendMessageOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SendMessageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string message, string emails, string phoneNumbers, bool? sendEmail, bool? sendSms, bool? sendToSuppliers, bool? sendToClients);

        [NonAction]
        public override System.Web.Mvc.ActionResult SendMessage(string message, string emails, string phoneNumbers, bool? sendEmail, bool? sendSms, bool? sendToSuppliers, bool? sendToClients)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendMessage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "emails", emails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "phoneNumbers", phoneNumbers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sendEmail", sendEmail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sendSms", sendSms);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sendToSuppliers", sendToSuppliers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sendToClients", sendToClients);
            SendMessageOverride(callInfo, message, emails, phoneNumbers, sendEmail, sendSms, sendToSuppliers, sendToClients);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToConfirmationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MaProgramez.Website.ViewModels.ConfirmationViewModel viewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectToConfirmation(MaProgramez.Website.ViewModels.ConfirmationViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectToConfirmation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            RedirectToConfirmationOverride(callInfo, viewModel);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
